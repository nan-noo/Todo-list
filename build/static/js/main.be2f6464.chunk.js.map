{"version":3,"sources":["components/Wrapper/Wrapper.js","context/TodoContext.js","components/Todo/TodoHeader.js","components/Todo/TodoItem.js","components/Todo/TodoList.js","components/Todo/TodoForm.js","components/Todo/TodoButton.js","components/App.js","reportWebVitals.js","index.js"],"names":["Wrapper","children","className","initialTodos","id","text","done","todoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","createContext","useTodoState","useContext","TodoDispatchContext","useTodoDispatch","TodoNextIdContext","TodoProvider","useReducer","dispatch","nextId","useRef","Provider","value","TodoHeader","today","Date","date","toLocaleDateString","year","month","day","weekday","todoLeft","length","CheckCircle","styled","div","props","css","TodoText","Remove","Item","TodoItem","onClick","React","memo","TodoList","todoList","Form","form","Input","input","TodoForm","useState","setInput","onSubmit","e","preventDefault","current","autoFocus","placeholder","onChange","target","CircleButton","button","open","TodoButton","setOpen","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAUeA,MARf,YAA8B,IAAZC,EAAW,EAAXA,SACd,OACI,qBAAKC,UAAU,UAAf,SACKD,K,eCHPE,EAAe,CACjB,CACIC,GAAI,EACJC,KAAM,2BACNC,MAAM,GAEV,CACIF,GAAI,EACJC,KAAM,2BACNC,MAAM,GAEV,CACIF,GAAI,EACJC,KAAM,6CACNC,MAAM,IAKd,SAASC,EAAYC,EAAOC,GACxB,OAAOA,EAAOC,MACV,IAAK,SACD,OAAOF,EAAMG,OAAOF,EAAOG,MAC/B,IAAK,SACD,OAAOJ,EAAMK,KAAI,SAAAD,GAAI,OAAIA,EAAKR,KAAOK,EAAOL,GAAnB,2BACXQ,GADW,IACLN,MAAOM,EAAKN,OACtBM,KAEd,IAAK,SACD,OAAOJ,EAAMM,QAAO,SAAAF,GAAI,OAAIA,EAAKR,KAAOK,EAAOL,MACnD,QACI,MAAM,IAAIW,MAAJ,iCAAoCN,EAAOC,QAK7D,IAAMM,EAAmBC,0BAClB,SAASC,IACZ,OAAOC,qBAAWH,IAAqB,IAAID,MAAM,4BAGrD,IAAMK,EAAsBH,0BACrB,SAASI,IACZ,OAAOF,qBAAWC,IAAwB,IAAIL,MAAM,4BAGxD,IAAMO,EAAoBL,0BAMX,SAASM,EAAT,GAAmC,IAAZtB,EAAW,EAAXA,SAClC,EAA0BuB,qBAAWjB,EAAaJ,GAAlD,mBAAOK,EAAP,KAAciB,EAAd,KACMC,EAASC,iBAAO,GAEtB,OACI,cAACX,EAAiBY,SAAlB,CAA2BC,MAAOrB,EAAlC,SACI,cAACY,EAAoBQ,SAArB,CAA8BC,MAAOJ,EAArC,SACI,cAACH,EAAkBM,SAAnB,CAA4BC,MAAOH,EAAnC,SACKzB,QCvCN6B,I,YAAAA,EApBf,WACI,IAAMC,EAAQ,IAAIC,KACZC,EAAOF,EAAMG,mBAAmB,QAAS,CAC3CC,KAAM,UAAWC,MAAO,OAAQC,IAAK,YAEnCA,EAAMN,EAAMG,mBAAmB,QAAS,CAACI,QAAS,SAGlDC,EADWrB,IACSJ,QAAO,SAAAF,GAAI,OAAKA,EAAKN,QAE/C,OACI,sBAAKJ,UAAU,aAAf,UACI,6BAAK+B,IACL,mBAAG/B,UAAU,MAAb,SAAoBmC,IACpB,uBACA,oBAAGnC,UAAU,cAAb,2BAAgCqC,EAASC,OAAzC,6B,qBCbNC,EAAcC,IAAOC,IAAV,gQAYX,SAAAC,GAAK,OACHA,EAAMtC,MACNuC,YADA,4GAQFC,EAAWJ,IAAOC,IAAV,2EAGR,SAAAC,GAAK,OACHA,EAAMtC,MACNuC,YADA,oEAOFE,EAASL,IAAOC,IAAV,qNAYNK,EAAON,IAAOC,IAAV,+LAQAI,GAMV,SAASE,EAAT,GAAqC,IAAlB7C,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,KAAMC,EAAO,EAAPA,KACnBmB,EAAWJ,IAIjB,OACI,eAAC2B,EAAD,WACI,cAACP,EAAD,CAAanC,KAAMA,EAAM4C,QALhB,kBAAMzB,EAAS,CAACf,KAAM,SAAUN,QAKzC,SAA6CE,GAAQ,cAAC,IAAD,MACrD,cAACwC,EAAD,CAAUxC,KAAMA,EAAhB,SAAuBD,IACvB,cAAC0C,EAAD,CAAQG,QANC,kBAAMzB,EAAS,CAACf,KAAM,SAAUN,QAMzC,SAA2B,cAAC,IAAD,SAKxB+C,UAAMC,KAAKH,GCzDXI,I,IAAAA,EAhBf,WACI,IAAMC,EAAWpC,IAEjB,OACI,qBAAKhB,UAAU,WAAf,SACKoD,EAASzC,KAAI,SAAAD,GAAI,OACd,cAAC,EAAD,CAEIR,GAAIQ,EAAKR,GACTC,KAAMO,EAAKP,KACXC,KAAMM,EAAKN,MAHNM,EAAKR,UCPxBmD,EAAOb,IAAOc,KAAV,sUAgBJC,EAAQf,IAAOgB,MAAV,yKASX,SAASC,IACL,IAAMjC,EJoBCP,qBAAWG,IAAsB,IAAIP,MAAM,4BInB5CU,EAAWJ,IACjB,EAA0BuC,mBAAS,IAAnC,mBAAOF,EAAP,KAAcG,EAAd,KAgBA,OACI,cAACN,EAAD,CAAMO,SAfO,SAAAC,GACbA,EAAEC,iBACFH,EAAS,IACTpC,EAAS,CACLf,KAAM,SACNE,KAAM,CACFR,GAAIsB,EAAOuC,QACX5D,KAAMqD,EACNpD,MAAM,KAGdoB,EAAOuC,WAIP,SACI,cAACR,EAAD,CAAOS,WAAS,EACZC,YAAY,4FACZtC,MAAO6B,EACPU,SAAU,SAAAL,GAAC,OAAIF,EAASE,EAAEM,OAAOxC,YAKlCsB,I,IAAAA,MAAMC,KAAKO,GCpDpBW,EAAe5B,IAAO6B,OAAV,wkBA8BZ,SAAA3B,GAAK,OACHA,EAAM4B,MACN3B,YADA,yRA6BO4B,MAff,WACI,MAAwBb,oBAAS,GAAjC,mBAAOY,EAAP,KAAaE,EAAb,KAEA,OACI,qCACKF,GACG,cAAC,EAAD,IAEJ,cAACF,EAAD,CAAcE,KAAMA,EAAMtB,QAAS,kBAAMwB,GAASF,IAAlD,SACI,cAAC,IAAD,U,MClCDG,MAhBf,WACE,OACE,sBAAKzE,UAAU,MAAf,UACE,cAACqB,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,SAGJ,4CAAc,cAAC,IAAD,WCRLqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.be2f6464.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Wrapper({children}) {\n    return (\n        <div className=\"Wrapper\">\n            {children}\n        </div>\n    )\n}\n\nexport default Wrapper\n","import React, {useReducer, useRef, useContext, createContext} from 'react';\n\nconst initialTodos = [\n    {\n        id: 1,\n        text: \"아침먹기\",\n        done: true,\n    },\n    {\n        id: 2,\n        text: \"공부하기\",\n        done: false,\n    },\n    {\n        id: 3,\n        text: \"강아지산책하기\",\n        done: true,\n    },\n];\n\n// reducer\nfunction todoReducer(state, action){\n    switch(action.type){\n        case 'CREATE':\n            return state.concat(action.todo);\n        case 'TOGGLE':\n            return state.map(todo => todo.id === action.id\n                    ? {...todo, done: !todo.done}\n                    : todo\n                );\n        case 'REMOVE':\n            return state.filter(todo => todo.id !== action.id);\n        default:\n            throw new Error(`Unhandled action type: ${action.type}`);\n    }\n}\n\n// context & custom hooks\nconst TodoStateContext = createContext();\nexport function useTodoState(){\n    return useContext(TodoStateContext) || new Error('Cannot find TodoProvider');\n}\n\nconst TodoDispatchContext = createContext();\nexport function useTodoDispatch(){\n    return useContext(TodoDispatchContext) || new Error('Cannot find TodoProvider');\n}\n\nconst TodoNextIdContext = createContext();\nexport function useTodoNextId(){\n    return useContext(TodoNextIdContext) || new Error('Cannot find TodoProvider');\n}\n\n// provider\nexport default function TodoProvider({children}) {\n    const [state, dispatch] = useReducer(todoReducer, initialTodos);\n    const nextId = useRef(4);\n\n    return(\n        <TodoStateContext.Provider value={state}>\n            <TodoDispatchContext.Provider value={dispatch}>\n                <TodoNextIdContext.Provider value={nextId}>\n                    {children}\n                </TodoNextIdContext.Provider>\n            </TodoDispatchContext.Provider>\n        </TodoStateContext.Provider>\n    );   \n}\n\n","import React from 'react';\nimport {useTodoState} from '../../context/TodoContext';\n\nfunction TodoHeader() {\n    const today = new Date();\n    const date = today.toLocaleDateString('ko-KR', {\n        year: 'numeric', month: 'long', day: 'numeric'\n    });\n    const day = today.toLocaleDateString('ko-KR', {weekday: 'long'});\n\n    const todoList = useTodoState();\n    const todoLeft = todoList.filter(todo => !todo.done);\n\n    return (\n        <div className=\"TodoHeader\">\n            <h1>{date}</h1>\n            <p className=\"day\">{day}</p>\n            <br/>\n            <p className=\"description\">할 일 {todoLeft.length}개 남음</p>\n        </div>\n    );\n}\n\nexport default TodoHeader;","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport { MdDone, MdDelete } from 'react-icons/md';\nimport {useTodoDispatch} from '../../context/TodoContext';\n\nconst CheckCircle = styled.div`\n    width: 24px;\n    height: 24px;\n\n    border-radius: 20px;\n    border: 1px solid #8d8d8d;\n    font-size: 20px;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    ${props => \n        props.done &&\n        css`\n            border: 1px solid #00e676;\n            color: #00e676;\n        `\n    }\n`;\n\nconst TodoText = styled.div`\n    flex: 1;\n    margin-left: 15px;\n    ${props =>\n        props.done &&\n        css`\n            color: #e0e0e0;\n        `\n    }\n`;\n\nconst Remove = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: #e0e0e0;\n    cursor: pointer;\n    &:hover{\n        color: #f93125;\n    }\n    display: none;\n`;\n\nconst Item = styled.div`\n    display: flex;\n\n    margin: 5px 0;\n    padding: 5px 0;\n\n    font-size: 20px;\n    &:hover{\n        ${Remove}{\n            display: initial;\n        }\n    }\n`;\n\nfunction TodoItem({id, text, done}) {\n    const dispatch = useTodoDispatch();\n    const onToggle = () => dispatch({type: 'TOGGLE', id});\n    const onRemove = () => dispatch({type: 'REMOVE', id});\n\n    return (\n        <Item>\n            <CheckCircle done={done} onClick={onToggle}>{done && <MdDone/>}</CheckCircle>\n            <TodoText done={done}>{text}</TodoText>\n            <Remove onClick={onRemove}><MdDelete/></Remove>\n        </Item>\n    );\n}\n\nexport default React.memo(TodoItem);","import React from 'react';\nimport {useTodoState} from '../../context/TodoContext';\nimport TodoItem from './TodoItem';\n\nfunction TodoList() {\n    const todoList = useTodoState();\n\n    return (\n        <div className=\"TodoList\">\n            {todoList.map(todo => (\n                <TodoItem \n                    key={todo.id}\n                    id={todo.id}\n                    text={todo.text} \n                    done={todo.done}/>\n            ))}\n        </div>\n    );\n}\n\nexport default TodoList;","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport {useTodoDispatch, useTodoNextId} from '../../context/TodoContext';\n\nconst Form = styled.form`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 150px;\n\n    position: absolute;\n    bottom: 0;\n    border-top: 1px solid #e0e0e0;\n    border-bottom-left-radius: 20px;\n    border-bottom-right-radius: 20px;\n\n    background: #f1f7e4;\n`;\n\nconst Input = styled.input`\n    width: 80%;\n    padding: 2px 10px;\n    border: none;\n    border-bottom: 1px solid #e0e0e0;\n    outline: none;\n    font-size: 16px;\n`;\n\nfunction TodoForm() {\n    const nextId = useTodoNextId();\n    const dispatch = useTodoDispatch();\n    const [input, setInput] = useState('');\n\n    const onCreate = e => {\n        e.preventDefault();\n        setInput('');\n        dispatch({\n            type: 'CREATE',\n            todo: {\n                id: nextId.current,\n                text: input,\n                done: false,\n            }\n        });\n        nextId.current++;\n    };\n\n    return (\n        <Form onSubmit={onCreate}>\n            <Input autoFocus \n                placeholder=\"일정을 작성하고, Enter를 눌러 주세요.\" \n                value={input} \n                onChange={e => setInput(e.target.value)}/>\n        </Form>\n    )\n}\n\nexport default React.memo(TodoForm);\n","import React, {useState} from 'react';\nimport styled, {css} from 'styled-components';\nimport {MdAdd} from 'react-icons/md';\n\nimport TodoForm from './TodoForm';\n\nconst CircleButton = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    align-self: center;\n\n    position: absolute;\n    bottom: -32px;\n\n    width: 64px;\n    height: 64px;\n\n    box-shadow: 0 0 8px 0 rgba(0,0,0, .2);\n    border-radius: 50%;\n    border: none;\n    outline: none;\n    background: #00e676;\n    font-size: 32px;\n    color: white;\n\n    &:hover{\n        background: #63e6be;\n    }\n    &:active{\n        background: #20c997;\n    }\n    z-index: 5;\n    cursor: pointer;\n    transition: 0.125s all ease-in;\n\n    ${props => \n        props.open &&\n        css`\n            background: #ff6b6b;\n            &:hover{\n                background: #ff8787;\n            }\n            &:active{\n                background: #fa5252;\n            }\n            transform: translate(0, 60%) rotate(45deg);\n        `\n    }\n`;\n\nfunction TodoButton() {\n    const [open, setOpen] = useState(false);\n\n    return (\n        <>\n            {open &&\n                <TodoForm/>\n            }\n            <CircleButton open={open} onClick={() => setOpen(!open)}>\n                <MdAdd/>\n            </CircleButton>\n        </>\n    )\n}\n\nexport default TodoButton\n","import React from 'react';\nimport {AiOutlineSmile} from 'react-icons/ai';\nimport Wrapper from './Wrapper/Wrapper';\nimport TodoHeader from './Todo/TodoHeader';\nimport TodoList from './Todo/TodoList';\nimport TodoButton from './Todo/TodoButton';\nimport './Todo/Todo.css';\n\nimport TodoProvider from '../context/TodoContext';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoProvider>\n        <Wrapper>\n          <TodoHeader/>\n          <TodoList/>\n          <TodoButton/>\n        </Wrapper>\n      </TodoProvider>\n      <footer>nannoo<AiOutlineSmile/></footer>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}